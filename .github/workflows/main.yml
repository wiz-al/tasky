name: Deploy App Service

on:
  workflow_dispatch: 

jobs:

  Deploy_App_Service:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
    env:
      VERSION: ${{ github.sha }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
      IMAGE_TAG: ${{ github.sha }}
      # Update if using CSATEST
      WIZ_ENV: prod
      WIZ_VULN_POLICY: "Default vulnerabilities policy"
      WIZ_SENSITIVE_DATA_POLICY: "Default sensitive data policy"
      WIZ_SECRETS_POLICY: "Default secrets policy"
      WIZ_IAC_POLICY: "Default IaC policy"
      NAME: app
      DIRECTORY: app

    steps:
      
      # GitHub Actions checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # # Build the Docker image
      # - name: Build
      #   run: docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${NAME}:${IMAGE_TAG} --file ./$DIRECTORY/Dockerfile ./$DIRECTORY

      # Download Wiz CLI
      - name: Download Wiz CLI
        run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

      # Wiz CLI authentication
      - name: Authenticate to Wiz
        run: sudo -E ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      # Wiz CLI image scan
      - name: Wiz CLI image scan
        id: scan
        run: |-
          sudo -E ./wizcli docker scan -i ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/app:${IMAGE_TAG} --sensitive-data --secrets --policy "$WIZ_SECRETS_POLICY" --policy "$WIZ_VULN_POLICY" --policy "$WIZ_SENSITIVE_DATA_POLICY" --policy-hits-only \
          --driver mountWithLayers --dockerfile "./${DIRECTORY}/Dockerfile" --output wiz-output.json,sarif,true --tag github_action_run_id=${{ github.run_id }}
        continue-on-error: true

      # Wiz CLI IaC scan
      - name: Wiz CLI IaC Scan
        run: sudo -E ./wizcli iac scan --path "." -p "$WIZ_IAC_POLICY" -p "$WIZ_SECRETS_POLICY" --tag github_action_run_id=${{ github.run_id }} -o iac-scan-results.sarif,sarif,true --policy-hits-only
        continue-on-error: true

      # Wiz CLI directory scan
      - name: Wiz CLI Directory Scan
        run: sudo -E ./wizcli dir scan --path "." -p "$WIZ_VULN_POLICY" -p "$WIZ_SECRETS_POLICY" --tag github_action_run_id=${{ github.run_id }} -o dir-scan-results.sarif,sarif,true --policy-hits-only
        continue-on-error: true

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Docker image
        run: |
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/app:${IMAGE_TAG}

      # Wiz CLI image tag
      - name: Run Wiz CLI image tag
        run: sudo -E ./wizcli docker tag -i ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/app:${IMAGE_TAG}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${CLUSTER_NAME}

      - name: Deploy to Kubernetes
        run: |
          envsubst < ./k8s/app.yaml | kubectl apply -f -
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          IMAGE_TAG: ${{ github.sha }}
        
